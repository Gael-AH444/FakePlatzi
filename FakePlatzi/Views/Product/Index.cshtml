@model List<ProductModel>

@{
	ViewData["Title"] = "Lista de Productos";
}

<h2 class="my-4">Lista de Productos</h2>

<div class="d-flex justify-content-between mb-4">
	<form method="get" action="/Product/Index" class="d-inline">
		<div class="input-group">
			<input type="text" name="searchQuery" id="searchInput" class="form-control" onkeyup="filterTable()" placeholder="Buscar productos..." />
		</div>
	</form>
	<a href="/Product/Create" class="btn btn-success">Agregar Nuevo Producto</a>
</div>

<table class="table table-striped table-hover" id="tablaProductos">
	<thead class="table-dark">
		<tr>
			<th scope="col">ID</th>
			<th scope="col">Nombre</th>
			<th scope="col">Precio</th>
			<th scope="col">Descripción</th>
			<th scope="col">Imagen</th>
			<th scope="col">Acciones</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var product in Model)
		{
			<tr>
				<td>@product.Id</td>
				<td>@product.Title</td>
				<td>$@product.Price</td>
				<td>@product.Description</td>
				<td>
					@if (product.Images != null && product.Images.Any())
					{
						<img src="@product.Images.First()" alt="Imagen de @product.Title" width="100" height="100" style="object-fit: cover;" />
					}
					else
					{
						<span>No disponible</span>
					}
				</td>
				<td>
					<a href="/Product/Edit/@product.Id" class="btn btn-warning btn-sm">
						Editar
					</a>
					<a href="/Product/Delete/@product.Id" class="btn btn-danger btn-sm">
						Eliminar
					</a>
					<button class="btn btn-info btn-sm" onclick="showProductDetails(@product.Id)">Detalles</button>
				</td>
			</tr>
		}
	</tbody>
</table>



@* Alerta del nuevo producto agregado *@
@if (TempData["CreatedProductId"] != null && TempData["CreatedProductName"] != null)
{
	<script>
		alert("Producto Creado!\nID: @TempData["CreatedProductId"]\nNombre: @TempData["CreatedProductName"]");
	</script>
}




@* Modal y script para informacion extra del producto *@
<script defer>
	async function showProductDetails(productId) {
		try {
			// Llama al backend para obtener los detalles del producto
			const response = await fetch(`/Product/GetProductById/${productId}`);
			const product = await response.json();

			console.log(product); // Verifica que aquí se obtienen los datos correctamente

			// Verifica si la respuesta contiene los datos del producto
			if (!product || response.status !== 200) {
				alert("No se pudieron obtener los detalles del producto.");
				return;
			}

			// Actualiza el contenido del modal con los datos del producto
			document.getElementById('productTitle').textContent = product.Title || 'N/A';
			document.getElementById('productPrice').textContent = `$${product.Price}` || 'N/A';
			document.getElementById('productCategory').textContent = product.CategoryId || 'N/A';
			document.getElementById('productDescription').textContent = product.Description || 'N/A';

			// Muestra el modal después de actualizar el contenido
			var productModal = new bootstrap.Modal(document.getElementById('productModal'));
			productModal.show();
		} catch (error) {
			console.error("Error al cargar los detalles del producto:", error);
		}
	}
</script>
<div class="modal fade" id="productModal" tabindex="-1" aria-labelledby="productModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="productModalLabel">Detalles del Producto</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<p><strong>Nombre:</strong> <span id="productTitle"></span></p>
				<p><strong>Precio:</strong> <span id="productPrice"></span></p>
				<p><strong>Categoría:</strong> <span id="productCategory"></span></p>
				<p><strong>Descripción:</strong> <span id="productDescription"></span></p>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
			</div>
		</div>
	</div>
</div>




@* Filtrar productos *@
<script>
	function filterTable() {
		const input = document.getElementById('searchInput');
		const filter = input.value.toLowerCase();
		const table = document.getElementById('tablaProductos');
		const rows = table.getElementsByTagName('tr');

		for (let i = 1; i < rows.length; i++) {
			const cells = rows[i].getElementsByTagName('td');
			let found = false;

			for (let j = 0; j < cells.length; j++) {
				if (cells[j]) {
					const txtValue = cells[j].textContent || cells[j].innerText;
					if (txtValue.toLowerCase().includes(filter)) {
						found = true;
						break;
					}
				}
			}
			rows[i].style.display = found ? "" : "none";
		}
	}
</script>







